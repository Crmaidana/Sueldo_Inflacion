"""
Django settings for sueldo_inflacion_project project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config # <-- Añade esta línea

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3t!6c1p)o-77mzx#agq6@h165ca$t2_e7p6zv%te05r6a6y!o('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'comparador', # <-- Añade esta línea
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sueldo_inflacion_project.urls'

# sueldo_inflacion_project/sueldo_inflacion_project/settings.py

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'comparador', 'templates')], # <-- Modifica esta línea
        'APP_DIRS': True, # Deja esto en True para que busque templates dentro de cada app
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sueldo_inflacion_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('DB_NAME'),         # <-- Usar config()
        'USER': config('DB_USER'),         # <-- Usar config()
        'PASSWORD': config('DB_PASSWORD'), # <-- Usar config()
        'HOST': config('DB_HOST'),         # <-- Usar config()
        'PORT': config('DB_PORT', default='3306'), # <-- Usar config() con un default opcional
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'charset': 'utf8mb4',
        }
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


STATIC_URL = 'static/'

# Directorio donde Django buscará archivos estáticos adicionales durante el desarrollo
# (ej. para archivos CSS o imágenes que no están atados a una app específica)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'), # Esto es si tienes una carpeta 'static' en la raíz de tu proyecto
    # Si tienes archivos estáticos específicos de la app 'comparador' fuera de su carpeta 'static/comparador/',
    # también podrías añadir:
    # os.path.join(BASE_DIR, 'comparador', 'static'), # No es lo habitual, ya que Django busca 'static/' dentro de las apps
]

# Es más probable que tu estructura sea:
# tu_proyecto/
# ├── static/  <-- Esta es la carpeta a la que se refiere os.path.join(BASE_DIR, 'static')
# │   └── images/
# │       └── image_760923.png
# └── comparador/
#     └── static/
#         └── comparador/
#             └── css/
#                 └── style.css
#             └── images/
#                 └── image_760923.png
#
# En tu caso, la configuración de `STATICFILES_DIRS` debería apuntar a la carpeta base `static`
# si pones recursos globales ahí.

# Pero para tu imagen de fondo y CSS que están en `comparador/static/comparador/`,
# Django los encontrará automáticamente porque `comparador` está en `INSTALLED_APPS`.
# La configuración de STATICFILES_DIRS es más bien para assets globales del proyecto.

# Sin embargo, si quieres que tu carpeta `comparador/static/` sea el punto de partida para {% static '' %},
# entonces la estructura que propuse de `comparador/static/comparador/` es la más limpia.
# Si tu imagen está en `comparador/static/images/image_760923.png`
# y tu CSS está en `comparador/static/css/style.css`
# entonces `STATICFILES_DIRS` puede no ser estrictamente necesario para `runserver`
# si `comparador` está en `INSTALLED_APPS`.


# Directorio donde Django recolectará todos los archivos estáticos con 'collectstatic' (para producción)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'